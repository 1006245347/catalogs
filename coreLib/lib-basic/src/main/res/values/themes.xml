<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
<!--    <style name="Theme.ark" parent="Theme.MaterialComponents.DayNight.DarkActionBar">-->
<!--    <style name="Theme.ark" parent="Theme.AppCompat.DayNight.NoActionBar">-->
<!--    <style name="Theme.ark" parent="Theme.Design.Light.NoActionBar">-->
<!--    <style name="Theme.ark" parent="Theme.MaterialComponents.Light.NoActionBar.Bridge">-->
    <style name="Theme.ark" parent="Theme.AppCompat.DayNight.NoActionBar" >
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/cBasic</item>
        <item name="colorPrimaryVariant">@color/cBasic</item>
        <item name="colorOnPrimary">@color/cWhite</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/cBasic</item>
        <item name="colorSecondaryVariant">@color/cBasic</item>
        <item name="colorOnSecondary">@color/cWhite</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>
<!--    <style name="AppStartTheme" parent="Theme.MaterialComponents.Light.NoActionBar">-->
<!--        <item name="android:windowFullscreen">true</item>-->
<!--        &lt;!&ndash; 窗口的背景，替代启动时候出现的白屏 &ndash;&gt;-->
<!--        <item name="android:windowBackground">@drawable/bg_welcome</item>-->
<!--    </style>-->

    <!--ActivityDialog底部弹出样式 start-->
    <style name="ActivityDialogTheme" parent="Theme.Design.Light.NoActionBar">
<!--    <style name="ActivityDialogTheme" parent="Theme.ark">-->
        <item name="android:windowBackground">@android:color/transparent</item> <!--设置dialog的背景，此处为系统给定的透明值-->
        <item name="android:windowFrame">@null</item>                <!--Dialog的windowFrame框为无-->
        <item name="android:windowNoTitle">true</item>　　　　　　　　 <!--是否显示标题-->
        <item name="android:windowIsFloating">true</item>            <!--是否浮现在activity之上-->
        <item name="android:windowIsTranslucent">true</item>         <!--是否半透明-->
        <item name="android:windowContentOverlay">@null</item>       <!--是否有覆盖-->
        <item name="android:windowAnimationStyle">@style/AnimationActivity</item>   <!--设置Activity出现方式-->
<!--        <item name="android:backgroundDimEnabled">true</item>        &lt;!&ndash;背景是否模糊显示&ndash;&gt;-->
    </style>

    <!--从底部弹出的动画样式-->
    <style name="AnimationActivity" mce_bogus="1" parent="@android:style/Animation.Activity">
        <!--一个activity创建进入的效果。-->
        <item name="android:activityOpenEnterAnimation">@anim/slide_in_bottom</item>
        <!--一个activity还没有finish()下退出效果, 比如有俩个activity A与B 首先启动A 然后再启动B 那么A还没有finish()  这时A的退出效果。-->
        <item name="android:activityOpenExitAnimation">@anim/slide_out_bottom</item>
        <!--表示上一个activity返回进入效果 比如有俩个activity A与B  B在最上面，B退出(finish)后 A重新进入的效果。-->
        <item name="android:activityCloseEnterAnimation">@anim/slide_in_bottom</item>
        <!--表示的是activity finish()之后的效果 比如有俩个activity A与B B退出后会被finish() 那么B的退出效果在这定义。-->
        <item name="android:activityCloseExitAnimation">@anim/slide_out_bottom</item>
    </style>

    <!--ActivityDialog底部弹出样式 start-->
    <style name="ActivityDialogThemeSecond" parent="Theme.Design.Light.NoActionBar">
        <!--    <style name="ActivityDialogTheme" parent="Theme.ark">-->
        <item name="android:windowBackground">@android:color/transparent</item> <!--设置dialog的背景，此处为系统给定的透明值-->
        <item name="android:windowFrame">@null</item>                <!--Dialog的windowFrame框为无-->
        <item name="android:windowNoTitle">true</item>　　　　　　　　 <!--是否显示标题-->
        <item name="android:windowIsFloating">true</item>            <!--是否浮现在activity之上-->
        <item name="android:windowIsTranslucent">true</item>         <!--是否半透明-->
        <item name="android:windowContentOverlay">@null</item>       <!--是否有覆盖-->
        <item name="android:windowAnimationStyle">@style/AnimationActivitySecond</item>   <!--设置Activity出现方式-->
        <!--        <item name="android:backgroundDimEnabled">true</item>        &lt;!&ndash;背景是否模糊显示&ndash;&gt;-->
    </style>

    <!--从底部弹出的动画样式-->
    <style name="AnimationActivitySecond" mce_bogus="1" parent="@android:style/Animation.Activity">
        <!--一个activity创建进入的效果。-->
        <item name="android:activityOpenEnterAnimation">@anim/slide_in_right</item>
        <!--一个activity还没有finish()下退出效果, 比如有俩个activity A与B 首先启动A 然后再启动B 那么A还没有finish()  这时A的退出效果。-->
        <item name="android:activityOpenExitAnimation">@anim/slide_out_right</item>
        <!--表示上一个activity返回进入效果 比如有俩个activity A与B  B在最上面，B退出(finish)后 A重新进入的效果。-->
        <item name="android:activityCloseEnterAnimation">@anim/slide_in_right</item>
        <!--表示的是activity finish()之后的效果 比如有俩个activity A与B B退出后会被finish() 那么B的退出效果在这定义。-->
        <item name="android:activityCloseExitAnimation">@anim/slide_out_right</item>
    </style>

    <!--关掉Activity转场动画-->
    <style name="NoAnimation">
        <item name="android:activityOpenEnterAnimation">@null</item>
        <item name="android:activityOpenExitAnimation">@null</item>
        <item name="android:activityCloseEnterAnimation">@null</item>
        <item name="android:activityCloseExitAnimation">@null</item>
        <item name="android:taskOpenEnterAnimation">@null</item>
        <item name="android:taskOpenExitAnimation">@null</item>
        <item name="android:taskCloseEnterAnimation">@null</item>
        <item name="android:taskCloseExitAnimation">@null</item>
        <item name="android:taskToFrontEnterAnimation">@null</item>
        <item name="android:taskToFrontExitAnimation">@null</item>
        <item name="android:taskToBackEnterAnimation">@null</item>
        <item name="android:taskToBackExitAnimation">@null</item>
    </style>
</resources>